name: Release pmoscode website

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    branches:
      - 'main'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.145.0
      STAGE: staging
    steps:
      - name: Check, if we're deploying production stage
        if: github.ref_type == 'tag'
        run: echo 'STAGE=production' >> "$GITHUB_ENV"

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Set up golang
        uses: actions/setup-go@v6
        with:
          go-version: '1.25.0'

      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: true

      - name: Install page theme
        run: |
          hugo mod vendor

      - name: Build with Hugo (Stage = ${{ env.STAGE }})
        run: |
          hugo --gc --minify --environment ${{ env.STAGE }}

      - name: Upload artifact (remote)
        uses: actions/upload-artifact@v4
        if: github.ref_type == 'tag'
        with:
          name: page
          path: ./public

      - name: Upload artifact (gh-pages)
        uses: actions/upload-pages-artifact@v4
        if: github.ref_type == 'branch'
        with:
          name: page
          path: ./public

  deploy-staging:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_type == 'branch'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: page

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref_type == 'tag'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: page

      - name: Install lftp
        run: |
          sudo apt-get update -y
          sudo apt-get install -y lftp

      - name: Transfer to webspace
        run: |
          ls -lrt # debug listing
          lftp -e "set ssl:verify-certificate false; open pmoscode.de; user ${{ secrets.FTP_USERNAME }} ${{ secrets.FTP_PASSWORD }}; mirror -X .* -X .*/ --reverse --only-newer --ignore-time --verbose --delete ./ httpdocs/; bye"