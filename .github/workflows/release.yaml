name: Release pmoscode website

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    branches:
      - 'main'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.121.1
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Set up golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.5'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install page theme
        run: |
          hugo mod vendor

  build-staging:
    runs-on: ubuntu-latest
    needs: prepare
    if: ${{ github.ref_type == 'branch' }}
    steps:
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build with Hugo
        run: |
          hugo --gc --minify --config staging --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy-staging:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-staging
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build-production:
    runs-on: ubuntu-latest
    needs: prepare
    if: ${{ github.ref_type == 'tag' }}
    steps:
      - name: Build with Hugo
        run: |
          hugo --gc --minify --config production

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: page
          path: ./public

  deploy-production:
    runs-on: ubuntu-latest
    needs: build-production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: page

      - name: Install lftp
        run: apt-get install -y lftp

      - name: Transfer to webspace
        run: lftp -e "set ssl:verify-certificate false; open pmoscode.de; user $FTP_USERNAME $FTP_PASSWORD; mirror -X .* -X .*/ --reverse --only-newer --ignore-time --verbose --delete public/ httpdocs/; bye"